
#include <Windows.h>
#include <GL\glew.h>
#include <GL\freeglut.h>
#include <iostream>
#include <ctime>
#include <stdlib.h>
#include <string.h> 
#include<math.h>
int ww = 1000, wh = 1000;
int a[9] = { 0 }, b[9] = { 0 };

char q[] = "rama";

#define PI 3.14

void displaystring(int x, int y, char *string) {
	int len, i;
	glRasterPos2f(x, y);
	len = (int)strlen(string);
	for (i = 0; i < len; i++) {
		glutBitmapCharacter(GLUT_BITMAP_TIMES_ROMAN_24, string[i]);

	}
}
void stupid() {
	int i = 0, j = 0, t, f;
	while (i < 9)
	{
		if (a[i] > a[i + 1])
		{
			t = a[i];
			a[i] = a[i + 1];
			a[i + 1] = t;
			j = i;
			while (j > 0) {
				if (a[j] < a[j - 1]) {
					f = a[j];
					a[j] = a[j - 1];
					a[j - 1] = f;
					j--;
				}
				else
					break;
			}

		}i++;
	}
}

void drawCirles(float cx, float cy, float r, float num_segments) {
	float theta, x, y;
	glBegin(GL_LINE_LOOP);
	for (int i = 0; i < num_segments; i++) {
		theta = 2.0*PI*i / num_segments;
		x = r * cosf(theta);
		y = r * sinf(theta);
		glVertex2f(x + cx, y + cy);

	}
	glEnd();
	glFlush();
}
void myinit() {
	glClearColor(0.1, 0.1, 0.1, 1);
	gluOrtho2D(0, ww, 0, wh);
	glMatrixMode(GL_MODELVIEW);
	glLineWidth(2);
}
void myres(GLsizei w, GLsizei h) {
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluOrtho2D(0, w, 0, h);
	glViewport(0, 0, w, h);
	ww = w;
	wh = h;

}
void display() {
	int xval = 400, yval = 600;
	glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
	glLoadIdentity();
	for (int i = 0; i < 9; i++) {
		drawCirles(50 + 95 * i, 900, 12 * b[i], 15);
		
	}

	stupid();
	for (int i = 0; i < 9; i++) {
		drawCirles(50 + 95 * i, 700, 12 * a[i], 15);
	}

	glFlush();
}
void main(int argc, char **argv) {
	glutInit(&argc, argv);
	printf("enter the 9points");
	for (int i = 0; i < 9; i++) {
		scanf_s("%d", &a[i]);
		b[i] = a[i];
	}
	glutInitWindowSize(ww, wh);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutCreateWindow("created");
	myinit();
	glutReshapeFunc(myres);
	glutDisplayFunc(display);
	//glutKeyboardFunc(key);
	glutMainLoop();
}